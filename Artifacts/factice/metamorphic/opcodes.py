STOP = 0x00
JUMPDEST = 0x5B
PUSH1 = 0x60
PUSH32 = 0x7F
RETURN = 0xF3
REVERT = 0xFD
INVALID = 0xFE
SELFDESTRUCT = 0xFF
CREATE2 = 0xF5
CREATE = 0xF0
CALLCODE = 0xF2
DELEGATECALL = 0xF4


def is_halting(opcode: int) -> bool:
    HALTING = [STOP, RETURN, REVERT, INVALID, SELFDESTRUCT]
    return any(opcode == h for h in HALTING)


def is_push(opcode: int) -> bool:
    return PUSH1 <= opcode <= PUSH32


def contain_opcode(runtime_code: str, opcode: int) -> bool:
    """
    TODO 检测是否存在目标且可达的opcode，but may raise FP:
    https://github.com/MrLuit/selfdestruct-detect/issues/15

    Credit:
        This function is a python implementation of code found here:
        https://github.com/MrLuit/selfdestruct-detect/blob/master/src/index.ts

    Args:
        runtime_code (str): deployed smart contract runtime bytecode as a hex string (i.e., "0x...")
        opcode (int): the opcode to search for in the runtime code

    Returns:
        bool: does the runtime code contain the given opcode?
    """
    runtime_code_bytes = bytearray.fromhex(runtime_code[2:])

    halted = False
    i = 0

    while i < len(runtime_code_bytes):

        oc = runtime_code_bytes[i]

        if oc == opcode and not halted:
            return True
        elif oc == JUMPDEST:
            halted = False
        elif is_halting(oc):
            halted = True
        elif is_push(oc):
            i += oc - PUSH1 + 0x02
            continue
        i += 1

    return False


# 测试contain_opcode
if __name__ == '__main__':
    code = ""
    contain_create = contain_opcode(code, CREATE)
    contain_create2 = contain_opcode(code, CREATE2)
    print(f"Contain CREATE: {contain_create}, CREATE2: {contain_create2}")
